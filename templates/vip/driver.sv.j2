{%- extends "generic_class.sv.j2" -%}

{%- block class_vars %}
{%- set class_type = "class" %}
{%- set class_name = vip.name ~ "_driver" %}
{%- set class_extends = "extends uvm_driver #(" ~ vip.name ~ "_tx)" %}
{%- set class_factory = class_name %}
{%- endblock class_vars %}

{% block class_members -%}
  virtual {{ vip.name }}_if vif;

  {{ vip.name }}_config m_config;
{%- endblock class_members %}

{% block class_functions_signatures -%}
  extern function new(string name, uvm_component parent);

  extern task run_phase(uvm_phase phase);
  extern task do_drive_controller();
  extern task do_drive_responder();
{%- endblock class_functions_signatures %}

{% block post_class_def -%}
function {{ class_name }}::new(string name, uvm_component parent);
  super.new(name, parent);
endfunction: new

task {{ class_name }}::run_phase(uvm_phase phase);
  `uvm_info(get_type_name(), "run_phase", UVM_HIGH)

  forever
  begin
    seq_item_port.get_next_item(req);
    `uvm_info(get_type_name(), $sformatf("req item:\n%s", req.sprint()), UVM_DEBUG)

    if (m_config.is_controller)
      do_drive_controller();
    else
      do_drive_responder();

    seq_item_port.item_done();
  end
endtask: run_phase

task {{ class_name }}::do_drive_controller();
  `uvm_fatal(get_type_name(), "TODO: fill do_drive_controller()");
endtask: do_drive_controller

task {{ class_name }}::do_drive_responder();
  `uvm_fatal(get_type_name(), "TODO: fill do_drive_responder()");
endtask: do_drive_responder
{%- endblock post_class_def %}

