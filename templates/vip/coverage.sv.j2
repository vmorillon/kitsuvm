{%- extends "generic_class.sv.j2" -%}

{%- block class_vars %}
{%- set class_type = "class" %}
{%- set class_name = vip.name ~ "_coverage" %}
{%- set class_extends = "extends uvm_subscriber #(" ~ vip.name ~ "_tx)" %}
{%- set class_factory = class_name %}
{%- endblock class_vars %}

{% block class_members -%}
  {{ vip.name }}_config m_config;
  {{ vip.name }}_tx m_item;
  bit m_is_covered;

  covergroup m_cov;
    option.per_instance = 1;
    // You may insert additional coverpoints here ...

    {coverpoints}
  endgroup
{%- endblock class_members %}

{% block class_functions_signatures -%}
  extern function new(string name, uvm_component parent);

  extern function void write(input {{ vip.name }}_tx t);
  extern function void build_phase(uvm_phase phase);
  extern function void report_phase(uvm_phase phase);
{%- endblock class_functions_signatures %}

{% block post_class_def -%}
function {{ class_name }}::new(string name, uvm_component parent);
  super.new(name, parent);
  m_is_covered = 0;
  m_cov = new();
endfunction: new

function void {{ class_name }}::write(input {{ vip.name }}_tx t);
  if (m_config.coverage_enable)
  begin
    m_item = t;
    m_cov.sample();
    // Check coverage - could use m_cov.option.goal instead of 100 if your simulator supports it
    if (m_cov.get_inst_coverage() >= 100) m_is_covered = 1;
  end
endfunction: write

function void {{ class_name }}::build_phase(uvm_phase phase);
  if (!uvm_config_db #({{ vip.name }}_config)::get(this, "", "config", m_config))
    `uvm_fatal(get_type_name(), "{{ vip.name }} config not found")
endfunction : build_phase

function void {{ class_name }}::report_phase(uvm_phase phase);
  if (m_config.coverage_enable)
    `uvm_info(get_type_name(), $sformatf("Coverage score = %3.1f%%", m_cov.get_inst_coverage()), UVM_MEDIUM)
  else
    `uvm_info(get_type_name(), "Coverage disabled for this agent", UVM_MEDIUM)
endfunction: report_phase
{%- endblock post_class_def %}

